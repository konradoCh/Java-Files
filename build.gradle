plugins {
  id 'java'
}

group = 'pl.zajavka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


ext {

logbackVersion = '1.4.0'
lombokVersion = '1.18.24'
junitVersion = '5.9.0'
mockitoVersion = '4.8.0'
springVersion = '5.3.23'
hibernateVersion = '6.1.3.Final'
postgresqlDriverVersion = '42.5.0'
jakartaPersistenceApiVersion = ''

}

dependencies {

implementation "ch.qos.logback:logback-classic:$logbackVersion"

compileOnly "org.projectlombok:lombok:$lombokVersion"
annotationProcessor "org.projectlombok:lombok:$lombokVersion"

implementation "org.springframework:spring-core:$springVersion"
implementation "org.springframework:spring-beans:$springVersion"
implementation "org.springframework:spring-context:$springVersion"
implementation "org.springframework:spring-context-support:$springVersion"
implementation "org.springframework:spring-expression:$springVersion"
implementation "org.springframework:spring-jdbc:$springVersion"


implementation "org.postgresql:postgresql:$postgresqlDriverVersion"

testCompileOnly "org.projectlombok:lombok:$lombokVersion"
testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion" //testy parametryzowane

testImplementation "org.springframework:spring-test:$springVersion"  //używanie springa w kontekście testowym (testy)

testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
testImplementation "org.mockito:mockito-inline:$mockitoVersion"
//Zależność do Jakarta Persistence API:
implementation "jakarta.persistence:jakarta.persistence-api:$jakartaPersistenceApiVersion"

//Zależność do Javax Persistence API:
implementation "javax.persistence:javax.persistence-api:$javaxPersistenceApiVersion"

}

repositories {
  mavenCentral()
}
test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}


